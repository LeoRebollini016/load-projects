{"ast":null,"code":"import { Global } from './global';\nimport * as i0 from \"@angular/core\";\nexport class UploadService {\n  constructor() {\n    this.url = Global.url;\n  }\n  makeFileRequest(url, params, files, name) {\n    return new Promise(function (resolve, reject) {\n      var formData = new FormData();\n      var xhr = new XMLHttpRequest();\n      for (var i = 0; i < files.length; i++) {\n        formData.append(name, files[i], files[i].name);\n      }\n      xhr.onreadystatechange = function () {\n        if (xhr.readyState == 4) {\n          if (xhr.status == 200) {\n            resolve(JSON.parse(xhr.response));\n          } else {\n            reject(xhr.response);\n          }\n        }\n      };\n      xhr.open('POST', url, true);\n      xhr.send(formData);\n    });\n  }\n  static #_ = this.ɵfac = function UploadService_Factory(t) {\n    return new (t || UploadService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UploadService,\n    factory: UploadService.ɵfac\n  });\n}","map":{"version":3,"names":["Global","UploadService","constructor","url","makeFileRequest","params","files","name","Promise","resolve","reject","formData","FormData","xhr","XMLHttpRequest","i","length","append","onreadystatechange","readyState","status","JSON","parse","response","open","send","_","_2","factory","ɵfac"],"sources":["F:\\Users\\Leo\\Desktop\\Universidad\\Cursos\\proyecto-angular\\src\\app\\services\\upload.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Global } from './global';\r\n\r\n\r\n@Injectable()\r\nexport class UploadService{\r\n\tpublic url: string;\r\n\tconstructor(){\r\n\t\tthis.url = Global.url;\r\n\t}\r\n\tmakeFileRequest(url: string, params: Array<string>, files: Array<File>, name: string){\r\n\t\treturn new Promise(function(resolve, reject){\r\n\t\t\tvar formData:any = new FormData();\r\n\t\t\tvar xhr = new XMLHttpRequest();\r\n\t\t\tfor(var i = 0; i< files.length; i++){\r\n\t\t\t\tformData.append(name, files[i],files[i].name);\r\n\t\t\t}\r\n\t\t\txhr.onreadystatechange = function(){\r\n\t\t\t\tif(xhr.readyState == 4){\r\n\t\t\t\t\tif(xhr.status == 200){\r\n\t\t\t\t\t\tresolve(JSON.parse(xhr.response));\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\treject(xhr.response);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\txhr.open('POST', url, true);\r\n\t\t\txhr.send(formData);\r\n\t\t});\r\n\t}\r\n}"],"mappings":"AACA,SAASA,MAAM,QAAQ,UAAU;;AAIjC,OAAM,MAAOC,aAAa;EAEzBC,YAAA;IACC,IAAI,CAACC,GAAG,GAAGH,MAAM,CAACG,GAAG;EACtB;EACAC,eAAeA,CAACD,GAAW,EAAEE,MAAqB,EAAEC,KAAkB,EAAEC,IAAY;IACnF,OAAO,IAAIC,OAAO,CAAC,UAASC,OAAO,EAAEC,MAAM;MAC1C,IAAIC,QAAQ,GAAO,IAAIC,QAAQ,EAAE;MACjC,IAAIC,GAAG,GAAG,IAAIC,cAAc,EAAE;MAC9B,KAAI,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAET,KAAK,CAACU,MAAM,EAAED,CAAC,EAAE,EAAC;QACnCJ,QAAQ,CAACM,MAAM,CAACV,IAAI,EAAED,KAAK,CAACS,CAAC,CAAC,EAACT,KAAK,CAACS,CAAC,CAAC,CAACR,IAAI,CAAC;;MAE9CM,GAAG,CAACK,kBAAkB,GAAG;QACxB,IAAGL,GAAG,CAACM,UAAU,IAAI,CAAC,EAAC;UACtB,IAAGN,GAAG,CAACO,MAAM,IAAI,GAAG,EAAC;YACpBX,OAAO,CAACY,IAAI,CAACC,KAAK,CAACT,GAAG,CAACU,QAAQ,CAAC,CAAC;WACjC,MAAI;YACJb,MAAM,CAACG,GAAG,CAACU,QAAQ,CAAC;;;MAGvB,CAAC;MACDV,GAAG,CAACW,IAAI,CAAC,MAAM,EAAErB,GAAG,EAAE,IAAI,CAAC;MAC3BU,GAAG,CAACY,IAAI,CAACd,QAAQ,CAAC;IACnB,CAAC,CAAC;EACH;EAAC,QAAAe,CAAA,G;qBAxBWzB,aAAa;EAAA;EAAA,QAAA0B,EAAA,G;WAAb1B,aAAa;IAAA2B,OAAA,EAAb3B,aAAa,CAAA4B;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}