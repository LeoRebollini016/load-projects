{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Project } from '../../models/project';\nimport { ProjectService } from '../../services/project.service';\nimport { UploadService } from '../../services/upload.service';\nimport { Global } from '../../services/global';\nlet CreateComponent = class CreateComponent {\n  constructor(_projectService, _uploadService) {\n    this._projectService = _projectService;\n    this._uploadService = _uploadService;\n    this.title = \"Crear proyecto\";\n    this.url = Global.url;\n    this.project = new Project('', '', '', '', 2021, '', '');\n  }\n  ngOnInit() {}\n  onSubmit(form) {\n    console.log(this.project);\n    // Guardar los datos\n    this._projectService.saveProject(this.project).subscribe(response => {\n      if (response.project) {\n        // Subir la imagen\n        if (this.filesToUpload) {\n          this._uploadService.makeFileRequest(Global.url + \"upload-image/\" + response.project._id, [], this.filesToUpload, 'image').then(result => {\n            this.save_project = result; //result.project\n            this.status = 'success';\n            form.resetForm();\n          });\n        } else {\n          this.save_project = response.project;\n          this.status = 'success';\n          form.resetForm();\n        }\n      } else {\n        this.status = 'failed';\n      }\n    }, error => {\n      console.log(error);\n    });\n  }\n  fileChangeEvent(fileInput) {\n    this.filesToUpload = fileInput.target.files;\n  }\n};\nCreateComponent = __decorate([Component({\n  selector: 'app-create',\n  templateUrl: './create.component.html',\n  styleUrls: ['./create.component.css'],\n  providers: [ProjectService, UploadService]\n})], CreateComponent);\nexport { CreateComponent };","map":{"version":3,"names":["Component","Project","ProjectService","UploadService","Global","CreateComponent","constructor","_projectService","_uploadService","title","url","project","ngOnInit","onSubmit","form","console","log","saveProject","subscribe","response","filesToUpload","makeFileRequest","_id","then","result","save_project","status","resetForm","error","fileChangeEvent","fileInput","target","files","__decorate","selector","templateUrl","styleUrls","providers"],"sources":["F:\\Users\\Leo\\Desktop\\Universidad\\Cursos\\proyecto-angular\\src\\app\\components\\create\\create.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Project } from '../../models/project';\nimport { ProjectService } from '../../services/project.service'\nimport { UploadService } from '../../services/upload.service';\nimport { Global } from '../../services/global';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-create',\n  templateUrl: './create.component.html',\n  styleUrls: ['./create.component.css'],\n  providers: [ProjectService, UploadService]\n})\nexport class CreateComponent implements OnInit {\n  public title: string;\n  public project: Project;\n  public status!: string;\n  public filesToUpload!: Array<File>;\n  public save_project!: string;\n  public url: string;\n\n  constructor(\n    private _projectService: ProjectService,\n    private _uploadService: UploadService\n  ) { \n    this.title = \"Crear proyecto\";\n    this.url = Global.url;\n    this.project = new Project('','','','',2021,'','');\n  }\n\n  ngOnInit(): void {\n  }\n\n  onSubmit(form: NgForm){\n    console.log(this.project);\n    // Guardar los datos\n    this._projectService.saveProject(this.project).subscribe(\n      response => {\n        if(response.project){       \n          // Subir la imagen\n          if(this.filesToUpload){\n          this._uploadService.makeFileRequest(Global.url + \"upload-image/\"+response.project._id, [], this.filesToUpload, 'image').then((result: any) => {\n            this.save_project = result; //result.project\n            this.status = 'success';\n            form.resetForm();\n          });\n          }else{\n            this.save_project = response.project;\n              this.status = 'success';\n              form.resetForm();\n          }\n        }else{\n          this.status = 'failed';\n        }\n      },\n      error => {\n        console.log(<any>error);\n      }\n    );\n  }\n  fileChangeEvent(fileInput: any){\n    this.filesToUpload = <Array<File>>fileInput.target.files;\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AACjD,SAASC,OAAO,QAAQ,sBAAsB;AAC9C,SAASC,cAAc,QAAQ,gCAAgC;AAC/D,SAASC,aAAa,QAAQ,+BAA+B;AAC7D,SAASC,MAAM,QAAQ,uBAAuB;AASvC,IAAMC,eAAe,GAArB,MAAMA,eAAe;EAQ1BC,YACUC,eAA+B,EAC/BC,cAA6B;IAD7B,KAAAD,eAAe,GAAfA,eAAe;IACf,KAAAC,cAAc,GAAdA,cAAc;IAEtB,IAAI,CAACC,KAAK,GAAG,gBAAgB;IAC7B,IAAI,CAACC,GAAG,GAAGN,MAAM,CAACM,GAAG;IACrB,IAAI,CAACC,OAAO,GAAG,IAAIV,OAAO,CAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,IAAI,EAAC,EAAE,EAAC,EAAE,CAAC;EACpD;EAEAW,QAAQA,CAAA,GACR;EAEAC,QAAQA,CAACC,IAAY;IACnBC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACL,OAAO,CAAC;IACzB;IACA,IAAI,CAACJ,eAAe,CAACU,WAAW,CAAC,IAAI,CAACN,OAAO,CAAC,CAACO,SAAS,CACtDC,QAAQ,IAAG;MACT,IAAGA,QAAQ,CAACR,OAAO,EAAC;QAClB;QACA,IAAG,IAAI,CAACS,aAAa,EAAC;UACtB,IAAI,CAACZ,cAAc,CAACa,eAAe,CAACjB,MAAM,CAACM,GAAG,GAAG,eAAe,GAACS,QAAQ,CAACR,OAAO,CAACW,GAAG,EAAE,EAAE,EAAE,IAAI,CAACF,aAAa,EAAE,OAAO,CAAC,CAACG,IAAI,CAAEC,MAAW,IAAI;YAC3I,IAAI,CAACC,YAAY,GAAGD,MAAM,CAAC,CAAC;YAC5B,IAAI,CAACE,MAAM,GAAG,SAAS;YACvBZ,IAAI,CAACa,SAAS,EAAE;UAClB,CAAC,CAAC;SACD,MAAI;UACH,IAAI,CAACF,YAAY,GAAGN,QAAQ,CAACR,OAAO;UAClC,IAAI,CAACe,MAAM,GAAG,SAAS;UACvBZ,IAAI,CAACa,SAAS,EAAE;;OAErB,MAAI;QACH,IAAI,CAACD,MAAM,GAAG,QAAQ;;IAE1B,CAAC,EACDE,KAAK,IAAG;MACNb,OAAO,CAACC,GAAG,CAAMY,KAAK,CAAC;IACzB,CAAC,CACF;EACH;EACAC,eAAeA,CAACC,SAAc;IAC5B,IAAI,CAACV,aAAa,GAAgBU,SAAS,CAACC,MAAM,CAACC,KAAK;EAC1D;CACD;AAlDY3B,eAAe,GAAA4B,UAAA,EAN3BjC,SAAS,CAAC;EACTkC,QAAQ,EAAE,YAAY;EACtBC,WAAW,EAAE,yBAAyB;EACtCC,SAAS,EAAE,CAAC,wBAAwB,CAAC;EACrCC,SAAS,EAAE,CAACnC,cAAc,EAAEC,aAAa;CAC1C,CAAC,C,EACWE,eAAe,CAkD3B;SAlDYA,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}