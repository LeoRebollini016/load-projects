{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { ProjectService } from '../../services/project.service';\nimport { Global } from '../../services/global';\nlet ProjectsComponent = class ProjectsComponent {\n  constructor(_projectService) {\n    this._projectService = _projectService;\n    this.url = Global.url;\n  }\n  ngOnInit() {\n    this.getProjects();\n  }\n  getProjects() {\n    this._projectService.getProjects().subscribe(response => {\n      if (response.projects) {\n        this.projects = response.projects;\n      }\n    }, error => {\n      console.log(error);\n    });\n  }\n};\nProjectsComponent = __decorate([Component({\n  selector: 'app-projects',\n  templateUrl: './projects.component.html',\n  styleUrls: ['./projects.component.css'],\n  providers: [ProjectService]\n})], ProjectsComponent);\nexport { ProjectsComponent };","map":{"version":3,"names":["Component","ProjectService","Global","ProjectsComponent","constructor","_projectService","url","ngOnInit","getProjects","subscribe","response","projects","error","console","log","__decorate","selector","templateUrl","styleUrls","providers"],"sources":["F:\\Users\\Leo\\Desktop\\Universidad\\Cursos\\proyecto-angular\\src\\app\\components\\projects\\projects.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Project } from '../../models/project';\nimport { ProjectService } from '../../services/project.service';\nimport { Global } from '../../services/global';\n@Component({\n  selector: 'app-projects',\n  templateUrl: './projects.component.html',\n  styleUrls: ['./projects.component.css'],\n  providers: [ProjectService]\n})\nexport class ProjectsComponent implements OnInit {\n    public projects!: Project[];\n    public url: string;\n  constructor(\n    private _projectService: ProjectService\n  ) { \n      this.url = Global.url;\n  }\n\n  ngOnInit(): void {\n    this.getProjects();\n  }\n  getProjects(){\n    this._projectService.getProjects().subscribe(\n        response => {\n            if(response.projects){\n              this.projects = response.projects;\n            }\n        },\n        error => {\n          console.log(<any>error);\n        }\n    );\n  }\n}"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAEjD,SAASC,cAAc,QAAQ,gCAAgC;AAC/D,SAASC,MAAM,QAAQ,uBAAuB;AAOvC,IAAMC,iBAAiB,GAAvB,MAAMA,iBAAiB;EAG5BC,YACUC,eAA+B;IAA/B,KAAAA,eAAe,GAAfA,eAAe;IAErB,IAAI,CAACC,GAAG,GAAGJ,MAAM,CAACI,GAAG;EACzB;EAEAC,QAAQA,CAAA;IACN,IAAI,CAACC,WAAW,EAAE;EACpB;EACAA,WAAWA,CAAA;IACT,IAAI,CAACH,eAAe,CAACG,WAAW,EAAE,CAACC,SAAS,CACxCC,QAAQ,IAAG;MACP,IAAGA,QAAQ,CAACC,QAAQ,EAAC;QACnB,IAAI,CAACA,QAAQ,GAAGD,QAAQ,CAACC,QAAQ;;IAEvC,CAAC,EACDC,KAAK,IAAG;MACNC,OAAO,CAACC,GAAG,CAAMF,KAAK,CAAC;IACzB,CAAC,CACJ;EACH;CACD;AAxBYT,iBAAiB,GAAAY,UAAA,EAN7Bf,SAAS,CAAC;EACTgB,QAAQ,EAAE,cAAc;EACxBC,WAAW,EAAE,2BAA2B;EACxCC,SAAS,EAAE,CAAC,0BAA0B,CAAC;EACvCC,SAAS,EAAE,CAAClB,cAAc;CAC3B,CAAC,C,EACWE,iBAAiB,CAwB7B;SAxBYA,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}